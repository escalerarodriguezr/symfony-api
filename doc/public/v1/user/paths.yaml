/api/v1/user/{id}:
  get:
    tags:
      - User
    summary: Get User by Id
    operationId: getUser
    security:
      - bearerAuth: []
    style: simple
    parameters:
      - in: path
        name: id
        schema:
          type: string
          example: "9f285960-f482-4f1b-9c88-549a1b4"
          description: UserId
        required: true
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  $ref: "#/components/schemas/user/UserEntity"
      '404':
        $ref: "#/components/responses/ResourceNotFound"
      '409':
        $ref: "#/components/responses/ConflictException"
      '500':
        $ref: "#/components/responses/InternalError"
  put:
    tags:
      - User
    summary: Update User
    operationId: putUser
    security:
      - bearerAuth: [ ]
    parameters:
      - in: path
        name: id
        schema:
          type: string
          example: "9f285960-f482-4f1b-9c88-549a1b4"
          description: UserId
        required: true
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                required: false
                description: User name
                example: 'Cesar Iniesta'
              email:
                type: string
                required: false
                description: User email
                example: 'cesar@cesar.com'

    style: simple
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  $ref: "#/components/schemas/user/UserEntity"
      '404':
        $ref: "#/components/responses/ResourceNotFound"
      '409':
        $ref: "#/components/responses/ConflictException"
      '500':
        $ref: "#/components/responses/InternalError"

/api/v1/user/{id}/change-password:
  put:
    tags:
      - User
    summary: Change User Password
    operationId: putChangeUserPassword
    security:
      - bearerAuth: [ ]
    parameters:
      - in: path
        name: id
        schema:
          type: string
          example: "9f285960-f482-4f1b-9c88-549a1b4"
          description: UserId
        required: true
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              oldPassword:
                type: string
                required: true
                description: Old User Password
                example: 'old-password'
              newPassword:
                type: string
                required: true
                description: New User Password
                example: 'new-password'
    style: simple
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  example: "Password has been changed!"
      '404':
        $ref: "#/components/responses/ResourceNotFound"
      '409':
        $ref: "#/components/responses/ConflictException"
      '500':
        $ref: "#/components/responses/InternalError"

/api/v1/user/{id}/avatar:
  post:
    tags:
      - User
    summary: Upload UserAvatar
    operationId: postUploadUserAvatar
    security:
      - bearerAuth: [ ]
    parameters:
      - in: path
        name: id
        schema:
          type: string
          example: "9f285960-f482-4f1b-9c88-549a1b4"
          description: UserId
        required: true
    requestBody:
      content:
        mulitparm/form-data:
          schema:
            type: object
            properties:
              avatar:
                type: string
                format: binary
                required: true
    style: simple
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              type: object
              required:
                - avatarResource
              properties:
                avatarResource:
                  type: string
                  example: "avatar/dfjkdhskj43324k$jdkfkds.png"
      '404':
        $ref: "#/components/responses/ResourceNotFound"
      '409':
        $ref: "#/components/responses/ConflictException"
      '500':
        $ref: "#/components/responses/InternalError"
